<?php declare(strict_types = 1);
//
// Generated by Smalldb\StateMachine\CodeGenerator\DtoGenerator.
// Do NOT edit! All changes will be lost!
// 
// 
namespace Smalldb\StateMachine\Test\Example\SupervisorProcess\SupervisorProcessData;

use DateTimeImmutable;
use InvalidArgumentException;
use Smalldb\StateMachine\CodeGenerator\Annotation\GeneratedClass;
use Smalldb\StateMachine\Test\Example\SupervisorProcess\SupervisorProcessProperties as Source_SupervisorProcessProperties;


/**
 * @GeneratedClass
 * @see \Smalldb\StateMachine\Test\Example\SupervisorProcess\SupervisorProcessProperties
 */
class SupervisorProcessDataImmutable extends Source_SupervisorProcessProperties implements SupervisorProcessData
{

	public function __construct(?SupervisorProcessData $source = null)
	{
		if ($source !== null) {
			if ($source instanceof Source_SupervisorProcessProperties) {
				$this->id = $source->id;
				$this->state = $source->state;
				$this->command = $source->command;
				$this->createdAt = $source->createdAt;
				$this->modifiedAt = $source->modifiedAt;
				$this->memoryLimit = $source->memoryLimit;
				$this->args = $source->args;
			} else {
				$this->id = $source->getId();
				$this->state = $source->getState();
				$this->command = $source->getCommand();
				$this->createdAt = $source->getCreatedAt();
				$this->modifiedAt = $source->getModifiedAt();
				$this->memoryLimit = $source->getMemoryLimit();
				$this->args = $source->getArgs();
			}
		}
	}


	public static function fromArray(array $source, ?SupervisorProcessData $sourceObj = null): self
	{
		$t = $sourceObj instanceof self ? clone $sourceObj : new self($sourceObj);
		$t->id = $source['id'];
		$t->state = $source['state'];
		$t->command = $source['command'];
		$t->createdAt = $source['createdAt'];
		$t->modifiedAt = $source['modifiedAt'];
		$t->memoryLimit = $source['memoryLimit'];
		$t->args = $source['args'];
		return $t;
	}


	public static function fromIterable(?SupervisorProcessData $sourceObj, iterable $source, ?callable $mapFunction = null): self
	{
		$t = $sourceObj instanceof self ? clone $sourceObj : new self($sourceObj);
		foreach ($source as $prop => $value) {
			switch ($prop) {
				case 'id': $t->id = $mapFunction ? $mapFunction($value) : $value; break;
				case 'state': $t->state = $mapFunction ? $mapFunction($value) : $value; break;
				case 'command': $t->command = $mapFunction ? $mapFunction($value) : $value; break;
				case 'createdAt': $t->createdAt = $mapFunction ? $mapFunction($value) : $value; break;
				case 'modifiedAt': $t->modifiedAt = $mapFunction ? $mapFunction($value) : $value; break;
				case 'memoryLimit': $t->memoryLimit = $mapFunction ? $mapFunction($value) : $value; break;
				case 'args': $t->args = $mapFunction ? $mapFunction($value) : $value; break;
				default: throw new InvalidArgumentException('Unknown property: "' . $prop . '" not in ' . __CLASS__);
			}
		}
		return $t;
	}


	public function getId(): int
	{
		return $this->id;
	}


	public function getState(): string
	{
		return $this->state;
	}


	public function getCommand(): string
	{
		return $this->command;
	}


	public function getCreatedAt(): DateTimeImmutable
	{
		return $this->createdAt;
	}


	public function getModifiedAt(): DateTimeImmutable
	{
		return $this->modifiedAt;
	}


	public function getMemoryLimit(): ?int
	{
		return $this->memoryLimit;
	}


	public function getArgs(): ?array
	{
		return $this->args;
	}


	public static function get(SupervisorProcessData $source, string $propertyName)
	{
		switch ($propertyName) {
			case 'id': return $source->getId();
			case 'state': return $source->getState();
			case 'command': return $source->getCommand();
			case 'createdAt': return $source->getCreatedAt();
			case 'modifiedAt': return $source->getModifiedAt();
			case 'memoryLimit': return $source->getMemoryLimit();
			case 'args': return $source->getArgs();
			default: throw new \InvalidArgumentException("Unknown property: " . $propertyName);
		}
	}


	public function withId(int $id): self
	{
		$t = clone $this;
		$t->id = $id;
		return $t;
	}


	public function withState(string $state): self
	{
		$t = clone $this;
		$t->state = $state;
		return $t;
	}


	public function withCommand(string $command): self
	{
		$t = clone $this;
		$t->command = $command;
		return $t;
	}


	public function withCreatedAt(DateTimeImmutable $createdAt): self
	{
		$t = clone $this;
		$t->createdAt = $createdAt;
		return $t;
	}


	public function withModifiedAt(DateTimeImmutable $modifiedAt): self
	{
		$t = clone $this;
		$t->modifiedAt = $modifiedAt;
		return $t;
	}


	public function withMemoryLimit(?int $memoryLimit): self
	{
		$t = clone $this;
		$t->memoryLimit = $memoryLimit;
		return $t;
	}


	public function withArgs(?array $args): self
	{
		$t = clone $this;
		$t->args = $args;
		return $t;
	}

}

